#
# klipper/custom (wanhao-d6/mks-sbase)
#

# probe offset setup:
# 1) ensure 3-point 0.8mm feeler guage
# 2) ensure bltouch-vs-nozzle trigger approx z=+1.0mm
# 3) measure and apply z_offset via PROBE_CALIBRATE

# nozzle pressure setup:
# [printer]/square_corner_velocity
# [extruder]/pressure_advance
# [firmware_retraction]/retract_length


#
# https://www.klipper3d.org/Rotation_Distance.html
# rotation_distance = <full_steps_per_rotation> * <microsteps> * <step_distance>
#

#
# mks-sbase DRV8825 microstep board pin setup
#   M0 = GND by default / +3.3V with J3 jumper ON
#   M1 = always GND 
#   M2 = always +3.3V
# meaning from datasheet:
# M2-M1-M0 = 1-0-0 => 16 microstep per step
# M2-M1-M0 = 1-0-1 => 32 microstep per step
# TODO: visual verify J3 jumper is on / 32 step valid

#
# https://marlinfw.org/docs/gcode/M092.html
# Units will usually be set in steps-per-millimeter
# DEFAULT_AXIS_STEPS_PER_UNIT

#
#
#
[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1768_16100006262006AF566E6E58C32000F5-if00
baud:   250000
restart_method: command

#
# config/printer-wanhao-duplicator-6-2016.cfg
# https://www.klipper3d.org/Config_Reference.html#printer
# https://www.klipper3d.org/Config_Reference.html#cartesian-kinematics
# 
[printer]
kinematics: cartesian
max_velocity: 600	 # wanhao=300  runtime: SET_VELOCITY_LIMIT
max_accel:    6000	 # wanhao=3000 runtime: SET_VELOCITY_LIMIT
max_z_velocity: 50.0 # wanhao=5 also see: homing_speed; firmware_retraction;
max_z_accel:    100  # wanhao=100
square_corner_velocity: 5 # deafult=5

#
#
#
[stepper_x]
# X_STEP_PIN
step_pin: P2.0
# X_DIR_PIN
dir_pin: P0.5
# X_ENABLE_PIN
enable_pin: !P0.4
# DEFAULT_AXIS_STEPS_PER_UNIT @ 160 step/mm
# step_distance: 0.00625 # obsolete
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 40
# X_MIN_PIN
endstop_pin: !P1.24
# X_MAX_PIN
#endstop_pin: !P1.25
# mm
position_endstop:   0.0
position_min:      -1.0
position_max:      +201.0
# mm/s
homing_speed:  100.0

#
#
#
[stepper_y]
# Y_STEP_PIN
step_pin: P2.1
# Y_DIR_PIN
dir_pin: !P0.11
# Y_ENABLE_PIN
enable_pin: !P0.10
# DEFAULT_AXIS_STEPS_PER_UNIT @ 160 step/mm
# step_distance: 0.00625 # obsolete
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 40
# Y_MIN_PIN
endstop_pin: !P1.26
# Y_MAX_PIN
#endstop_pin: !P1.27
# mm
position_endstop:  0.0
position_min:      -1.0
position_max:      +201.0
# mm/s
homing_speed:  100.0

#
#
#
[stepper_z]
# Z_STEP_PIN
step_pin: P2.2
# Z_DIR_PIN
dir_pin: P0.20
# Z_ENABLE_PIN
enable_pin: !P0.19
# DEFAULT_AXIS_STEPS_PER_UNIT @ 1600 step/mm
# step_distance: 0.000625 # obsolete
full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 4
# Z_MIN_PIN
endstop_pin: !P1.28
# Z_MAX_PIN
#endstop_pin: !P1.29
position_endstop: +0.8   # mm; using 0.8 mm feeler gauge
position_min:     -3.0   # mm; safe gap to the plate
position_max:     +165.0 # mm; using 165mm runtime limit
homing_speed:       20.0 # mm/s
second_homing_speed: 3.0 # mm/s
homing_retract_dist:   3.0 # mm
homing_retract_speed:  5.0 # mm/s

#
# calibrate at ambient 25...35 C
# PID_CALIBRATE HEATER=extruder TARGET=250

# type-1 == 0.4mm nozzle; 50W power
#pid_Kp=17.801
#pid_Ki=0.652
#pid_Kd=121.490

# type-2 == 0.6mm nozzle; 70W power
# with case_fan=off, temp_start=25C
#Recv: // PID parameters: pid_Kp=13.069 pid_Ki=0.382 pid_Kd=111.737

#
# pressure_advance :: ABS@260C = 0.25 
# pressure_advance :: NYL@275C = 17.5mm * 0.02/mm = 0.35
#

#
# https://www.klipper3d.org/G-Codes.html#extruder
# https://www.klipper3d.org/Config_Reference.html#extruder
#
# TODO: runtime nozzle_diameter 
# https://github.com/garethky/change-nozzle-klipper-extra
#
[extruder]
pressure_advance: 0.20 # PLA defalut
pressure_advance_smooth_time: 0.050
nozzle_diameter:   1.0  # used as upper limit - see code in klippy/*.py
filament_diameter: 1.75 # only default
step_pin: P2.3
dir_pin: P0.22
enable_pin: !P0.21
# DEFAULT_AXIS_STEPS_PER_UNIT @ 830 step/mm
# step_distance: 0.00120481927 # obsolete
full_steps_per_rotation: 200
microsteps: 32
# 2024-04-22
rotation_distance: 7.86506019456
heater_pin: P2.7
sensor_pin: P1.30
sensor_type: PT100 INA826
adc_voltage: 4.875 # default=5.000 :: a way to offset
#
control: pid
pid_Kp=13.069 
pid_Ki=0.382 
pid_Kd=111.737
#
min_temp: 0
max_temp: 350
min_extrude_temp: 195
max_extrude_only_distance: 500


#
[heater_bed]
heater_pin: P2.5
sensor_pin: P0.23
sensor_type: Generic 3950
#
control: pid
pid_Kp=73.700
pid_Ki=5.583
pid_Kd=243.208
#
min_temp: 0
max_temp: 150

#
#
#
[fan]
pin: P2.4


#[static_digital_output leds]
#pins: P1.18, P1.19, P1.20, P1.21, P4.28

#
#
#
[mcp4451 stepper_digipot1]
# DIGIPOT_I2C_ADDRESS_A 0x2C
i2c_address: 44
scale: 2.25
# wiper 0 is X, 1 is Y, 2 is Z,
wiper_0: 1.5
wiper_1: 1.5
wiper_2: 1.5
# wiper 3 is E0
wiper_3: 1.5

#
#
#
[mcp4451 stepper_digipot2]
# DIGIPOT_I2C_ADDRESS_B 0x2D
i2c_address: 45
scale: 2.25
# wiper 0 is E1
wiper_0: 1.5

#
# M355 - Case Light Control
#
[gcode_macro M355]
gcode:
    {% set LITE_VALUE = params.LITE_LEVEL|default(127)|int %}
    SET_PIN PIN=pin_case_lite VALUE={LITE_VALUE}

#
# M355 - Case Light Control
#
[output_pin pin_case_lite]
pin: P0.15
pwm: True
cycle_time: 0.01
scale: 255
value: 127
shutdown_value: 0

#
# M141 - Set Chamber Temperature
#
[gcode_macro M141]
gcode:
    {% set CHAMBER_TEMP = params.CHAMBER_TARGET|default(0)|int %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={CHAMBER_TEMP}

#
# M141 - Set Chamber Temperature
#
[heater_generic chamber]
gcode_id: C
heater_pin:  P0.17
sensor_pin:  P0.24
sensor_type: Generic 3950
control:  watermark
min_temp: 0
max_temp: 99

#
# M141 - Set Chamber Temperature
#
[verify_heater chamber]
# deg
heating_gain: 1.0
# sec
check_gain_time: 300

#
# SG92R, nozzle tray
#
[servo servo_one]
pin: P3.25
initial_angle:       180
maximum_servo_angle: 180
minimum_pulse_width: 0.0004
maximum_pulse_width: 0.0024

#
# SG92R, TODO
#
[servo servo_two]
pin: P3.26
initial_angle:       180
maximum_servo_angle: 180
minimum_pulse_width: 0.0004
maximum_pulse_width: 0.0024

#
#
#
[idle_timeout]
# seconds
timeout: 1800 ; 30 minutes
gcode:
    M118 IDLE TIME XXX
#    M84 ; motors off
#    TURN_OFF_HEATERS

# https://www.klipper3d.org/Config_Reference.html#virtual_sdcard
#[virtual_sdcard]
#path: ~/.octoprint/uploads/

# https://www.klipper3d.org/Skew_Correction.html
[skew_correction]

#
# https://github.com/KevinOConnor/klipper/blob/master/docs/BLTouch.md
#
[bltouch]
control_pin: P4.28
sensor_pin:  P1.22
pin_move_time: 0.3
speed: 5.0
# nozzle plane
x_offset: +0.0
# behind the nozzle
y_offset: +46.0
# result of PROBE_CALIBRATE
z_offset: +1.500 ; to squish first layer, increase z_offset

#
# https://github.com/KevinOConnor/klipper/blob/master/docs/Bed_Mesh.md
#
[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 0,50
mesh_max: 200,200
mesh_pps: 2,2
probe_count: 5,5
algorithm: lagrange
fade_start:   0.6
fade_end:     6.0
fade_target:  0.0
split_delta_z: 0.025
move_check_distance: 5
# zero_reference_position: ??? TODO

#
# disable heaters when homing or probing
#
[homing_heaters]
# when this is active
steppers: stepper_z
# make these inactive
heaters:  heater_bed, extruder
#heaters:  heater_bed, extruder, extruder1

#
# G2/G3
# An arc will be split into segments.
# https://www.klipper3d.org/Config_Reference.html#gcode_arcs
[gcode_arcs] 
resolution: 0.5

#
# G10/G11 SET_RETRACTION GET_RETRACTION
# https://www.klipper3d.org/G-Codes.html#firmware_retraction
# https://www.klipper3d.org/Config_Reference.html#firmware_retraction
# note: vosp=25mm^3/sec -> linsp=10mm/sec for filament=1.75mm
[firmware_retraction]
retract_speed:  		21  # default=20  
retract_length: 		1.6 # default=0
unretract_speed:        11  # default=10
unretract_extra_length: 0.1 # default=0

#
# G28
# https://www.klipper3d.org/Config_Reference.html#homing_override
[homing_override]
set_position_z: 3 ; *** plate down first ***
gcode:
    M118 AUTO_HOME
#
    BED_MESH_CLEAR
#    
# note: bltouch removed
#    BED_MESH_PROFILE REMOVE=default
#
#    SET_GCODE_OFFSET Z=0.0
#
    G90 ; absolute position
    G0 Z5 F1200 ;  *** plate down first ***
    G28 X0 Y0
    G28 Z0
    G90 ; absolute position
    G0 Z5 F1200 ; move z away 5mm
    G0 X100 Y0 F6000 ; move head front
#
# note: bltouch removed
#    PROBE_RESET

#
# G29 ; duration: 60 sec
#
[gcode_macro G29]
gcode:
    G28
    M118 AUTO_MESH
    BED_MESH_CALIBRATE
    G90 ; absolute position
    G0 Z50 F1800 ; move z away 50
    G0 X100 Y0 F6000 ; move head front

[gcode_macro PROBE_RESET]
gcode:
    M118 PROBE RESET
    BLTOUCH_DEBUG COMMAND=reset
    BLTOUCH_DEBUG COMMAND=pin_down
    BLTOUCH_DEBUG COMMAND=pin_up
    BLTOUCH_DEBUG COMMAND=reset
    BLTOUCH_DEBUG COMMAND=pin_down
    BLTOUCH_DEBUG COMMAND=pin_up
    BLTOUCH_DEBUG COMMAND=reset
    BLTOUCH_DEBUG COMMAND=pin_down
    BLTOUCH_DEBUG COMMAND=pin_up
    BLTOUCH_DEBUG COMMAND=reset


# https://www.klipper3d.org/G-Codes.html#display_status
[display_status]
# enable by section presence:
# * Display Message: M117 <message>
# * Set build percentage: M73 P<percent>

#
# M118
# send back to host
# https://www.klipper3d.org/Config_Reference.html?h=m118#respond
[respond]
default_type: echo

[gcode_macro WITH_PARAM]

variable_filament_type="NONE"

variable_filament_park_size = 15  # mm # leave melt zone
variable_filament_park_feed = 1.5 # mm/sec # leave melt zone

variable_retract_speed     = 20   # mm/sec G10 filament speed
variable_retract_length    = 1.5  # mm     G10 retract distance
variable_unretract_speed   = 10   # mm/sec G11 filament speed
variable_unretract_deltum  = 0.0  # mm     G11 unretract distance delta

variable_preadv_advance=0 # klipper pressure advacne factor

gcode:
	M118 WITH_PARAM
    {% if 'FILAMENT_TYPE' in params %}
	    M118 FILAMENT_TYPE={params.FILAMENT_TYPE}
    	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=filament_type VALUE='"{params.FILAMENT_TYPE}"'
    {% endif %}
    {% if 'FILAMENT_PARK_SIZE' in params %}
	    M118 FILAMENT_PARK_SIZE={params.FILAMENT_PARK_SIZE}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=filament_park_size VALUE={params.FILAMENT_PARK_SIZE|float}
    {% endif %}
    {% if 'FILAMENT_PARK_FEED' in params %}
	    M118 FILAMENT_PARK_FEED={params.FILAMENT_PARK_FEED}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=filament_park_feed VALUE={params.FILAMENT_PARK_FEED|float}
    {% endif %}
    {% if 'PREADV_ADVANCE' in params %}
	    M118 PREADV_ADVANCE={params.PREADV_ADVANCE}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=preadv_advance VALUE={params.PREADV_ADVANCE|float}
    {% endif %}
    {% if 'RETRACT_SPEED' in params %}
	    M118 RETRACT_SPEED={params.RETRACT_SPEED}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=retract_speed VALUE={params.RETRACT_SPEED|float}
    {% endif %}
    {% if 'RETRACT_LENGTH' in params %}
	    M118 RETRACT_LENGTH={params.RETRACT_LENGTH}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=retract_length VALUE={params.RETRACT_LENGTH|float}
    {% endif %}
    {% if 'UNRETRACT_SPEED' in params %}
	    M118 UNRETRACT_SPEED={params.UNRETRACT_SPEED}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=unretract_speed VALUE={params.UNRETRACT_SPEED|float}
    {% endif %}
    {% if 'UNRETRACT_DELTUM' in params %}
	    M118 UNRETRACT_DELTUM={params.UNRETRACT_DELTUM}
	  	SET_GCODE_VARIABLE MACRO=WITH_PARAM VARIABLE=unretract_deltum VALUE={params.UNRETRACT_DELTUM|float}
    {% endif %}

[gcode_macro WITH_HEAT_BASE]
variable_main_temp=-1
variable_rest_temp=-1
gcode:
  	SET_GCODE_VARIABLE MACRO=WITH_HEAT_BASE VARIABLE=main_temp VALUE={params.MAIN|float}
  	SET_GCODE_VARIABLE MACRO=WITH_HEAT_BASE VARIABLE=rest_temp VALUE={params.REST|float}

[gcode_macro WITH_HEAT_TOOL]
variable_main_temp=-1
variable_rest_temp=-1
gcode:
  	SET_GCODE_VARIABLE MACRO=WITH_HEAT_TOOL VARIABLE=main_temp VALUE={params.MAIN|float}
  	SET_GCODE_VARIABLE MACRO=WITH_HEAT_TOOL VARIABLE=rest_temp VALUE={params.REST|float}

[gcode_macro PARAM_START]
gcode:
    M118 PARAM_START
    
	M118 PRESSURE
    {% set preadv_advance = printer["gcode_macro WITH_PARAM"].preadv_advance %}
	SET_PRESSURE_ADVANCE ADVANCE={preadv_advance} # report result

	M118 RETRACTION
    {% set retract_speed = printer["gcode_macro WITH_PARAM"].retract_speed %}
    {% set retract_length = printer["gcode_macro WITH_PARAM"].retract_length %}
    {% set unretract_speed = printer["gcode_macro WITH_PARAM"].unretract_speed %}
    {% set unretract_deltum = printer["gcode_macro WITH_PARAM"].unretract_deltum %}
	SET_RETRACTION RETRACT_SPEED={retract_speed} 
	SET_RETRACTION RETRACT_LENGTH={retract_length}
	SET_RETRACTION UNRETRACT_SPEED={unretract_speed} 
	SET_RETRACTION UNRETRACT_EXTRA_LENGTH={unretract_deltum}
	GET_RETRACTION # report result

#
# slicer print start
#
[gcode_macro PRINT_START]
gcode:
    M118 PRINT_START

    {% set BASE_MAIN_TEMP = printer["gcode_macro WITH_HEAT_BASE"].main_temp %}
    {% set TOOL_MAIN_TEMP = printer["gcode_macro WITH_HEAT_TOOL"].main_temp %}
    
    {% set filament_type = printer["gcode_macro WITH_PARAM"].filament_type %}
    

	# position for cleanup
    G28 ; home and level
    G90 ; absolute position
	G0 X100 Y000 Z165 F4800 ; move to front/bottom
	
	# M190 - Wait for Bed Temperature
	M118 BASE_MAIN_TEMP={BASE_MAIN_TEMP}
    M190 S{BASE_MAIN_TEMP}
	
	# M109 - Wait for Hotend Temperature
	M118 TOOL_MAIN_TEMP={TOOL_MAIN_TEMP}
    M109 S{TOOL_MAIN_TEMP}
    
    G28 ; home and level
#    G29 ; home and level
#    NOZZLE_TRAY ; trap drip

    SET_SKEW CLEAR=1

	# 2024-04-24
	M118 CURRENT_SKEW
	#           AC     BD     AD 
	SET_SKEW XY=141.41,141.39,100.11
	GET_CURRENT_SKEW
	#Recv: // XY Skew: 0.000141 radians, 0.01 degrees

    G90 ; absolute position
    G92 E0 ; reset extruder
    
    PARAM_START

#
# slicer print end
#
[gcode_macro PRINT_FINISH]
gcode:
    M118 PRINT_FINISH
    
    G90 ; absolute position
    G1 X100 Y200 Z165 F4800 ; move head away
    
    {% set filament_type = printer["gcode_macro WITH_PARAM"].filament_type %}
    {% set filament_park_size = printer["gcode_macro WITH_PARAM"].filament_park_size %}
    {% set filament_park_feed = printer["gcode_macro WITH_PARAM"].filament_park_feed %}
    
    {% if filament_type == "PLA" %}
	    M118 filament_park_size={filament_park_size} filament_park_feed={filament_park_feed}
	    M83 ; relative extrusion
	    G1 E-{filament_park_size} F{filament_park_feed*60} ; retract to detach from melt zone
    {% endif %}
    
    SET_SKEW CLEAR=1

    TURN_OFF_HEATERS
    M84  ; disable motors
    M107 ; disable cooler

#
# slicer print pause
#
[gcode_macro PRINT_PAUSE]
gcode:
    M118 PRINT_PAUSE

#
# slicer color change
#
[gcode_macro COLOR_CHANGE]
gcode:
    M118 COLOR_CHANGE

#
# slicer after layer change
#
[gcode_macro LAYER_START]
gcode:
    G92 E0 ; reset extruder

#
# slicer before layer change
#
[gcode_macro LAYER_FINISH]
gcode:
    G92 E0 ; reset extruder


#
# slicer filament start
#
[gcode_macro FILAMENT_START]
gcode:
    M118 FILAMENT_START
#note: broken tray, disable for now    
#    {% if printer.toolhead.homed_axes == "xyz" %}
#	    FILAMENT_FEED MOVE=+1
#	    NOZZLE_WIPE
#	    ; NOZZLE_PRIME
#    {% else %}
#        M118 FILAMENT START: rejected : homed_axes : {printer.toolhead.homed_axes}
#    {% endif %}


#
# slicer filament finish
#
[gcode_macro FILAMENT_FINISH]
gcode:
    M118 FILAMENT_FINISH
# note: back move plugs NYL 
#    {% if printer.toolhead.homed_axes == "xyz" %}
#        FILAMENT_FEED MOVE=-1
#    {% else %}
#        M118 FILAMENT FINISH: rejected : homed_axes : {printer.toolhead.homed_axes}
#    {% endif %}

#
# position drip tray
#
[gcode_macro NOZZLE_TRAY]
gcode:
    M118 NOZZLE_TRAY
    SAVE_GCODE_STATE    NAME=nozzle_tray_state
    G90 ; absolute position
    RESTORE_GCODE_STATE NAME=nozzle_tray_state

#
# unload collected filament debry
#
[gcode_macro NOZZLE_TRAY_DUMP]
# assume dump from deployed position
gcode:
    {% set Z_SPACE = params.NOZZLE_Z_SPACE|default(35)|int %}
    M118 NOZZLE_TRAY_DUMP
    G91 ; relative position
    G0 Z+{Z_SPACE} ; move down
    NOZZLE_TRAY_REMOVE
    NOZZLE_TRAY_DEPLOY
    G0 Z-{Z_SPACE} ; move back

#
# place tray on the plate
#
[gcode_macro NOZZLE_TRAY_DEPLOY]
gcode:
    M118 NOZZLE_TRAY_DEPLOY
    NOZZLE_TRAY_INVOKE ANGLE=000

#
# place tray next to the plate
#
[gcode_macro NOZZLE_TRAY_REMOVE]
gcode:
    M118 NOZZLE_TRAY_REMOVE
    NOZZLE_TRAY_INVOKE ANGLE=180

#
# apply servo tray angle
#
[gcode_macro NOZZLE_TRAY_INVOKE]
gcode:
    {% set ANGLE = params.NOZZLE_TRAY_ANGLE|default(90)|int %}
    SET_SERVO SERVO=servo_one ANGLE={ANGLE}
    G4 P1500 ; milliseconds await to complete

#
# clean nozzle deposits
#
[gcode_macro NOZZLE_WIPE]
gcode:
    M118 NOZZLE_WIPE

	# silicone mat size
    {% set X_MIN = params.NOZZLE_X_MIN|default(0)|int %}
    {% set X_MAX = params.NOZZLE_X_MAX|default(15)|int %}
	# silicone mat size
    {% set Y_MIN = params.NOZZLE_Y_MIN|default(30)|int %}
    {% set Y_MAX = params.NOZZLE_Y_MAX|default(185)|int %}
	# tray/mat clearance
    {% set Z_MIN = params.NOZZLE_Z_MIN|default(14)|int %}
    {% set Z_MAX = params.NOZZLE_Z_MAX|default(50)|int %}
    
    SAVE_GCODE_STATE    NAME=nozzle_wipe_state

    G0 E+0.001 ; trigger cold extrude error

    G0 F6000 ; 100 mm/sec
    G1 F6000 ; 100 mm/sec

    G90 ; absolute position
    G0 Z{Z_MAX}
    G0 X{X_MIN} Y{Y_MIN}
    NOZZLE_TRAY_DEPLOY
    G0 Z{Z_MIN}

    NOZZLE_WIPE_BRUSH_ONLY
    NOZZLE_WIPE_BRUSH_ONLY
    NOZZLE_WIPE_BRUSH_ONLY
    NOZZLE_WIPE_BRUSH_ONLY

#    NOZZLE_TRAY_DUMP
#
#    NOZZLE_WIPE_BRUSH_ONLY
#    NOZZLE_WIPE_BRUSH_ONLY
#    NOZZLE_WIPE_BRUSH_ONLY
#    NOZZLE_WIPE_BRUSH_ONLY

    G90 ; absolute position
    G0 Z{Z_MAX}
    NOZZLE_TRAY_REMOVE

    RESTORE_GCODE_STATE NAME=nozzle_wipe_state

# brush nozzle without filament feed
[gcode_macro NOZZLE_WIPE_BRUSH_ONLY]
gcode:
    M118 NOZZLE_WIPE_BRUSH_ONLY
    {% set X_WIPE = params.NOZZLE_X_WIPE|default(10)|int %}
    {% set Y_WIPE = params.NOZZLE_Y_WIPE|default(145)|int %}
    G91 ; relative position
    G0 Y+{Y_WIPE} ;
    G0 X+{X_WIPE} ;
    G0 Y-{Y_WIPE} ;
    G0 X-{X_WIPE} ;

# brush nozzle and feed filament
[gcode_macro NOZZLE_WIPE_BRUSH_FEED]
gcode:
    M118 NOZZLE_WIPE_BRUSH_FEED
    {% set E_FEED = params.BRUSH_E_FEED|default(10)|int %}
    {% set X_WIPE = params.BRUSH_X_WIPE|default(15)|int %}
    {% set Y_WIPE = params.BRUSH_Y_WIPE|default(165)|int %}
    G91 ; relative position
    G1 Y+{Y_WIPE} E+{E_FEED} ;
    G0 X+{X_WIPE} ;
    G1 Y-{Y_WIPE} E+{E_FEED} ;
    G0 X-{X_WIPE} ;

#
# prime nozzle filament
#
[gcode_macro NOZZLE_PRIME]
gcode:
    {% set Z_OFFS = params.NOZZLE_Z_OFFS|default(0.1)|float %}
    M118 NOZZLE_PRIME
    SAVE_GCODE_STATE    NAME=nozzle_prime_state

    G90 ; absolute position
    G0 F4800    ; 80 mm/sec
    G0 X0 Y0 Z{Z_OFFS} ; move origin
    NOZZLE_PRIME_STEP
    NOZZLE_PRIME_STEP

    RESTORE_GCODE_STATE NAME=nozzle_prime_state

#
# volume: 200*0.6*0.1 mm^3 deposit == 5 mm @ 1.75 mm extrude
#
[gcode_macro NOZZLE_PRIME_STEP]
gcode:
    M118 NOZZLE_PRIME_STEP
    G91 ; relative position
    M83 ; relative extrusion
    G1 F1200     ; 20 mm/sec
    G1 Y+2       ; step forward
    G1 X+200 E15 ; extrude rite
    G1 Y+2       ; step forward
    G1 X-200 E15 ; extrude left

#
# paint hotbed with glue stick
#
[gcode_macro GLUON_DRAW]
gcode:
    M118 GLUON_DRAW
	# number of draw passes
    {% set COUNT =  params.COUNT|default(1)|int %}
	# effective glue stick diameter
    {% set PEN_D =  params.PEN_D|default(10.0)|float %}
	# paint area center
    {% set CORE_X = params.CORE_X|default(100)|int %}
    {% set CORE_Y = params.CORE_Y|default(100)|int %}
	# paint area dimension
    {% set SIZE_X = params.SIZE_X|default(100)|int %}
    {% set SIZE_Y = params.SIZE_Y|default(100)|int %}
    {% set COUNT_PASS = COUNT | int %}
    {% for INDEX_PASS in range(COUNT_PASS) %}
        M118 PASS INDEX={INDEX_PASS}
        GLUON_DRAW_PASS PEN_D={PEN_D} CORE_X={CORE_X} CORE_Y={CORE_Y} SIZE_X={SIZE_X} SIZE_Y={SIZE_Y}
    {% endfor %}
    M118 GLUON DONE
    G0 X100 Y000 Z165  ; unmount position

#
# paint hotbed with glue stick - single pass
#
[gcode_macro GLUON_DRAW_PASS]
gcode:
    M118 GLUON_DRAW_PASS
    # required params
    {% set PEN_D =  params.PEN_D %}
    {% set CORE_X = params.CORE_X %}
    {% set CORE_Y = params.CORE_Y %}
    {% set SIZE_X = params.SIZE_X %}
    {% set SIZE_Y = params.SIZE_Y %}
    ;;;;;;;;;;;;;;;;;;;;;;
    ; calc position
    {% set MIN_X = CORE_X|int - SIZE_X|int/2 %}
    {% set MAX_X = CORE_X|int + SIZE_X|int/2 %}
    {% set COUNT_X = (SIZE_X|int / PEN_D|int) | int %}
    {% set MIN_Y = CORE_Y|int - SIZE_Y|int/2 %}
    {% set MAX_Y = CORE_Y|int + SIZE_Y|int/2 %}
    {% set COUNT_Y = (SIZE_Y|int / PEN_D|int) | int %}
    M118 MIN_X={MIN_X} COUNT_X={COUNT_X} MIN_Y={MIN_Y} COUNT_Y={COUNT_Y}
    ;;;;;;;;;;;;;;;;;;;;;;
    ; paint to rite
    GLUON_REMOVE
    G90 ; absolute position
    G0 F6000  ; 100 mm/sec
    G0 X{MIN_X} Y{MIN_Y}
    GLUON_DEPLOY
    G91 ; relative position
	{% for INDEX_X in range(COUNT_X) %}
        M118 RITE INDEX_X={INDEX_X}
	    {% if INDEX_X is even %}
    	    G0 Y+{SIZE_Y} ; draw to back
	    {% else %}
	        G0 Y-{SIZE_Y} ; draw to face
	    {% endif %}
		{% if not loop.last %}
            G0 X+{PEN_D}  ; step to rite
		{% endif %}
	{% endfor %}
    ;;;;;;;;;;;;;;;;;;;;;;
    ; paint to back
    GLUON_REMOVE
    G0 F6000  ; 100 mm/sec
    G90 ; absolute position
    G0 X{MIN_X} Y{MIN_Y}
    GLUON_DEPLOY
    G91 ; relative position
    {% for INDEX_Y in range(COUNT_Y) %}
        M118 BACK INDEX_Y={INDEX_Y}
        {% if INDEX_Y is even %}
            G0 X+{SIZE_X} ; draw to rite
        {% else %}
            G0 X-{SIZE_X} ; draw to left
        {% endif %}
        {% if not loop.last %}
            G0 Y+{PEN_D}  ; step to back
        {% endif %}
    {% endfor %}
    ;;;;;;;;;;;;;;;;;;;;;;
    ; paint to left
    GLUON_REMOVE
    G90 ; absolute position
    G0 F6000  ; 100 mm/sec
    G0 X{MAX_X} Y{MAX_Y}
    GLUON_DEPLOY
    G91 ; relative position
    {% for INDEX_X in range(COUNT_X) %}
        M118 LEFT INDEX_X={INDEX_X}
        {% if INDEX_X is even %}
            G0 Y-{SIZE_Y} ; move to face
        {% else %}
            G0 Y+{SIZE_Y} ; move to back
        {% endif %}
        {% if not loop.last %}
            G0 X-{PEN_D}  ; step to left
        {% endif %}
    {% endfor %}
    ;;;;;;;;;;;;;;;;;;;;;;
    ; paint to face
    GLUON_REMOVE
    G0 F6000  ; 100 mm/sec
    G90 ; absolute position
    G0 X{MAX_X} Y{MAX_Y}
    GLUON_DEPLOY
    G91 ; relative position
    {% for INDEX_Y in range(COUNT_Y) %}
        M118 FACE INDEX_Y={INDEX_Y}
        {% if INDEX_Y is even %}
            G0 X-{SIZE_X} ; move to left
        {% else %}
            G0 X+{SIZE_X} ; move to rite
        {% endif %}
        {% if not loop.last %}
            G0 Y-{PEN_D}  ; step to face
        {% endif %}
    {% endfor %}
    ;;;;;;;;;;;;;;;;;;;;;;
    GLUON_REMOVE

#
#
#
[gcode_macro GLUON_DEPLOY]
gcode:
    M118 GLUON_DEPLOY
    G90 ; absolute position
    G0 F6000 ; 100 mm/sec
    G0 Z85   ; move down

#
#
#
[gcode_macro GLUON_REMOVE]
gcode:
    M118 GLUON_REMOVE
    G90 ; absolute position
    G0 F6000 ; 100 mm/sec
    G0 Z110  ; move up


#
# https://www.klipper3d.org/Pressure_Advance.html
#
[gcode_macro FILAMENT_TUNEUP]
gcode:
    M118 FILAMENT_TUNEUP
    
    ; reset retraction 
	SET_RETRACTION RETRACT_LENGTH=0 RETRACT_SPEED=40 UNRETRACT_SPEED=20 UNRETRACT_EXTRA_LENGTH=0
    
    ; make corners pronounced
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    
    ; ensure using 50x50x50 mm test cube shell
    ; iterate advance factor from 0 to 1 in 50 steps
    ; tuning tower formula: pressure_advance = start + factor * z_height
    ; select z_height from prited klipper-box model with optimal corner state
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=0.02


#
#
#

[gcode_macro GLOBAL]
variable_nozzle_volume: 15 ; mm lenth to fill/drain nozzle chamber
variable_nozzle_heated: 210 ; C temperature to fill/drain nozzle chamber
gcode:
    M118 GLOBAL ;

[gcode_macro FILAMENT_FEED]
gcode:
    M118 FILAMENT_FEED ;
    {% set FEED_SIZE=printer["gcode_macro GLOBAL"].nozzle_volume %}
    {% set HEATED_TEMP=printer["gcode_macro GLOBAL"].nozzle_heated %}
    {% set NOZZLE_TEMP=printer.extruder.temperature %}
    {% if NOZZLE_TEMP >= HEATED_TEMP %}
        M83 ; relative extrusion
        {% set MOVE=params.MOVE|int %}
        {% if MOVE == +1  %}
            M118 FILAMENT_FEED : extrude {FEED_SIZE} ;
            G1 E+{FEED_SIZE} F720 ; extract to enter into melt zone
        {% endif %}
        {% if MOVE == -1  %}
            M118 FILAMENT_FEED : retract {FEED_SIZE} ;
            G1 E-{FEED_SIZE} F720 ; retract to detach from melt zone
        {% endif %}
    {% else %}
            M118 FILAMENT_FEED : rejected : {NOZZLE_TEMP}C vs {HEATED_TEMP}C ;
    {% endif %}

#
#
#

[gcode_macro M300]
gcode:
    M118 PLAY_BEEP ;

#
#
#    

#
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: SPEED_TEST SPEED=300 ACCEL=5000 ITERATIONS=10
# https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/macros/SPEED_TEST.cfg
#
[gcode_macro SPEED_TEST]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=SPEED_TEST
    
    # Output parameters to g-code terminal
    { action_respond_info("SPEED_TEST: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
#        {% if printer.configfile.settings.quad_gantry_level %}
#            {% if printer.quad_gantry_level.applied == False %}
#                QUAD_GANTRY_LEVEL
#                G28 Z
#            {% endif %}
#        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=SPEED_TEST

#
# https://www.klipper3d.org/Status_Reference.html#gcode_move
#

[delayed_gcode REPORT_SPEED]
gcode:
	{% set SPEED_FACT = printer.gcode_move.speed_factor %}
	{% set SPEED_PERC = (100 * SPEED_FACT)|round|int %}
    M118 SPEED_PERC={SPEED_PERC}%
  
[gcode_macro MAKE_SPEED]
gcode:
    {% set DELTA = params.DELTA|default(0)|int %}
    {% if DELTA != 0  %}
	    {% set SPEED_FACT = printer.gcode_move.speed_factor %}
		{% set SPEED_PERC = (100 * SPEED_FACT)|round|int + DELTA %}
    	M220 S{SPEED_PERC}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=REPORT_SPEED DURATION=1

[gcode_macro MAKE_RETRACT]
gcode:

    {% set RETRACT_DELTA = params.RETRACT_DELTA|default(0.0)|float %}
    {% if RETRACT_DELTA != 0.0  %}
	    {% set retract_length = printer["gcode_macro WITH_PARAM"].retract_length %}
		{% set retract_length = retract_length + RETRACT_DELTA %}
		WITH_PARAM RETRACT_LENGTH={retract_length}
		SET_RETRACTION RETRACT_LENGTH={retract_length}
    {% endif %}

    {% set UNRETRACT_DELTA = params.UNRETRACT_DELTA|default(0.0)|float %}
    {% if UNRETRACT_DELTA != 0.0  %}
	    {% set unretract_deltum = printer["gcode_macro WITH_PARAM"].unretract_deltum %}
		{% set unretract_deltum = unretract_deltum + UNRETRACT_DELTA %}
		WITH_PARAM UNRETRACT_DELTUM={unretract_deltum}
		SET_RETRACTION UNRETRACT_EXTRA_LENGTH={unretract_deltum}
    {% endif %}

    {% set RETRACT_REPORT = params.RETRACT_REPORT|default('no') %}
    {% if RETRACT_REPORT == 'yes' %}
    	GET_RETRACTION
    {% endif %}
    
#
#    
#
